{"mappings":"kgBACMA,sBACAC,oBACAC,WAEN,MAAMC,EAWG,gBAVQC,GACb,MAAMC,EAAQD,EAAKE,MAAM,MAAMC,QAAQC,GAAMA,EAAEC,OAAS,IAElDC,EAAa,CAAEC,SAAU,IAAIC,MAAM,KAIzC,OAHAP,EAAMQ,SAASC,MACNJ,EAAYI,MAEdJ,IAMLK,EAAMC,EAAAC,OAAU,UAAUC,OAAO,OAAOC,KAAK,QAAS,QAAQA,KAAK,SAAU,iBAE1EC,EAASC,EAAMC,EAAO,GAAIC,EAAI,GACrC,MAAMC,EAAO,MAAEF,EAAMX,SAAU,GAAIc,OAAQJ,EAAKI,QAIhD,OAHAJ,EAAKV,SAASE,SAAO,CAAEa,EAAOC,KAC5BH,EAAKb,SAASiB,KAAKR,EAASM,EAAKG,EAAWF,GAAIJ,EAAI,OAE/CC,EAGT,MAAMM,EAAc,CAAEC,EAAG,GAAIC,EAAG,IAChC,IAAIC,EAAOjB,EAAAK,OAAUa,SAAS,CAACJ,EAAYC,EAAGD,EAAYE,IAI1DhB,EAAAC,OAAU,UACPkB,SAAS,QAFV,6FAGCC,GAAG,SAAUC,MACDA,EAAIC,OAAOC,MAAON,EAAMb,EAAUjB,EAAY2B,EAAaf,QAJxE,4FAOgBkB,EAAMb,EAAUjB,EAAY2B,EAAaf","sources":["tries/demos/trie.js"],"sourcesContent":["const d3 = require('d3');\nconst { alphabet } = require('../trie');\nconst { insert } = require('../trie');\nconst { updateTree } = require('./graph');\n\nconst dictionary = (() => {\n  function parse(text) {\n    const words = text.split('\\n').filter((t) => t.length > 0);\n\n    const dictionary = { children: new Array(26) };\n    words.forEach((word) => {\n      insert(dictionary, word);\n    });\n    return dictionary;\n  }\n\n  return { parse };\n})();\n\nconst svg = d3.select('#chart').append('svg').attr('width', '100%').attr('height', '100%');\n\nfunction toD3Tree(tree, name = '', d = 0) {\n  const node = { name, children: [], isWord: tree.isWord };\n  tree.children.forEach((child, i) => {\n    node.children.push(toD3Tree(child, alphabet[i], d + 1));\n  });\n  return node;\n}\n\nconst nodeSpacing = { x: 15, y: 50 };\nlet tree = d3.tree().nodeSize([nodeSpacing.x, nodeSpacing.y]);\n\nconst value =\n  'fruit\\ndrain\\ntrip\\nanthem\\nsolid\\nin\\ndock\\ntribute\\nkick\\nsort\\nso\\nsquare\\na\\nthrive\\n';\nd3.select('#input')\n  .property('value', value)\n  .on('input', (evt) => {\n    updateTree(evt.target.value, tree, toD3Tree, dictionary, nodeSpacing, svg);\n  });\n\nupdateTree(value, tree, toD3Tree, dictionary, nodeSpacing, svg);\n"],"names":["alphabet","insert","updateTree","$d13103db2727738f$var$dictionary","text","words","split","filter","t","length","dictionary","children","Array","forEach","word","$d13103db2727738f$var$svg","$h36xl","select","append","attr","$d13103db2727738f$var$toD3Tree","tree","name","d","node","isWord","child","i","push","$d13103db2727738f$require$alphabet","$d13103db2727738f$var$nodeSpacing","x","y","$d13103db2727738f$var$tree","nodeSize","property","on","evt","target","value"],"version":3,"file":"trie.2cf507bc.js.map"}