{"mappings":"4hBAIMA,OAEN,MAAMC,EAAQC,KAAKC,IAAIC,OAAOC,WAAY,KAG1CC,SAASC,cAAc,WAAWC,MAAMC,MAAK,GAAMR,MAEnD,MAAMS,EAAMC,EAAAC,OAAO,WAAWC,OAAO,OAAOC,KAAK,QAASb,GAAOa,KAAK,SAJvD,KAMf,IAAIC,EAAW,CACbC,SAAU,CACRC,GAAI,EACJC,GAAI,EACJC,GAAIlB,EACJmB,GAXW,KAabC,OAAQ,GACRC,MAAO,GAGT,MAAMC,EAAQC,EAAAC,cAAcC,OAAO,CAAC,EAAG,IAAIC,MAAM,CAAC,OAAQ,kBAEjDC,EAAMC,GACbA,EAASP,MAAQ,EAEjB,MAAMQ,EAAQ,GAId,OAHAC,EAAMF,GAAWG,IACfF,EAAMG,KAAKD,MAENF,WAGAI,EAAOL,GACd,OAAOD,EAAMC,GAAUM,SAASH,GAASA,EAAKX,kBAGvCU,EAAMC,EAAMI,GACnBA,EAAGJ,GAECA,EAAKK,eACPL,EAAKK,aAAaf,MAAQU,EAAKV,MAAQ,EACvCS,EAAMC,EAAKK,aAAcD,GAEzBJ,EAAKM,cAAchB,MAAQU,EAAKV,MAAQ,EACxCS,EAAMC,EAAKM,cAAeF,GAE1BJ,EAAKO,gBAAgBjB,MAAQU,EAAKV,MAAQ,EAC1CS,EAAMC,EAAKO,gBAAiBH,GAE5BJ,EAAKQ,iBAAiBlB,MAAQU,EAAKV,MAAQ,EAC3CS,EAAMC,EAAKQ,iBAAkBJ,IAIjC,IAAIK,EACAC,WAEKC,IACPD,EAAOhC,EAAIkC,UAAU,SAASC,KAAKjB,EAAMb,IAAYiB,GAASA,EAAKhB,WACnE0B,EAAKI,OAAOC,SACZL,EACGM,QACAnC,OAAO,QACPC,KAAK,QAAS,QACdA,KAAK,KAAK,SAAUmC,GACnB,OAAOA,EAAEjC,SAASC,MAEnBH,KAAK,KAAK,SAAUmC,GACnB,OAAOA,EAAEjC,SAASE,MAEnBJ,KAAK,SAAS,SAAUmC,GACvB,OAAOA,EAAEjC,SAASG,GAAK8B,EAAEjC,SAASC,MAEnCH,KAAK,UAAU,SAAUmC,GACxB,OAAOA,EAAEjC,SAASI,GAAK6B,EAAEjC,SAASE,MAGtCR,EAAIkC,UAAU,SAASpC,MAAM,QAAQ,SAAUyC,GAC7C,OAAO1B,EAAM0B,EAAE3B,UAGjBmB,EAAM/B,EAAIkC,UAAU,UAAUC,KAAKX,EAAOnB,IAAYmC,GAAMA,EAAEC,IAC9DV,EAAIK,OAAOC,SACXN,EACGO,QACAnC,OAAO,UACPC,KAAK,QAAS,SACdA,KAAK,MAAM,SAAUmC,GACpB,OAAOA,EAAEE,KAEVrC,KAAK,MAAM,SAAUmC,GACpB,OAAOA,EAAEG,KAEVtC,KAAK,IAAK,GACVuC,aACAC,SAAS,KACTC,WAAW,QAAQ,WAClB,OAAOC,EAAAC,YAAY,MAAO,WAE9B/C,EAAIkC,UAAU,UAAUc,QAG1BhB,EAAOhC,EACJkC,UAAU,SACVC,KAAKjB,EAAMb,IAAYiB,GAASA,EAAKhB,WACrCgC,QACAnC,OAAO,QACPC,KAAK,QAAS,QACdA,KAAK,KAAK,SAAUmC,GACnB,OAAOA,EAAEjC,SAASC,MAEnBH,KAAK,KAAK,SAAUmC,GACnB,OAAOA,EAAEjC,SAASE,MAEnBJ,KAAK,SAAS,SAAUmC,GACvB,OAAOA,EAAEjC,SAASG,GAAK8B,EAAEjC,SAASC,MAEnCH,KAAK,UAAU,SAAUmC,GACxB,OAAOA,EAAEjC,SAASI,GAAK6B,EAAEjC,SAASE,MAGtCuB,EAAM/B,EACHkC,UAAU,UACVC,KAAKX,EAAOnB,IACZiC,QACAnC,OAAO,UACPC,KAAK,QAAS,SACdA,KAAK,MAAM,SAAUmC,GACpB,OAAOA,EAAEE,KAEVrC,KAAK,MAAM,SAAUmC,GACpB,OAAOA,EAAEG,KAEVtC,KAAK,IAAK,GAEbC,EAAW,CACTC,SAAU,CACRC,GAAI,EACJC,GAAI,EACJC,GAAIlB,EACJmB,GAzIW,KA2IbC,OAAQ,GACRC,MAAO,GAGTqB,IAEA,MAAMgB,EAAgBrD,SAASC,cAAc,kBACtBD,SAASC,cAAc,cAE/BqD,iBAAiB,SAAO,OAC9B7C,EAAU,CAAEoC,EAAGjD,KAAK2D,SAAW5D,EAAOmD,EArJhC,IAqJmClD,KAAK2D,WACrDlB,OAGFgB,EAAcC,iBAAiB,SAAO,KACpC7C,EAAW,CACTC,SAAU,CACRC,GAAI,EACJC,GAAI,EACJC,GAAIlB,EACJmB,GA/JS,KAiKXC,OAAQ,GACRC,MAAO,GAETqB","sources":["quadtrees/demos/3.js"],"sourcesContent":["import { interpolate } from 'd3-interpolate';\nimport { scaleLinear } from 'd3-scale';\nimport { select } from 'd3-selection';\nrequire('d3-transition');\nconst { insert } = require('../quadtree');\n\nconst width = Math.min(window.innerWidth, 750);\nconst height = 300;\n\ndocument.querySelector('#target').style.width = `${width}px`;\n\nconst svg = select('#target').append('svg').attr('width', width).attr('height', height);\n\nlet quadtree = {\n  boundary: {\n    x1: 0,\n    y1: 0,\n    x2: width,\n    y2: height,\n  },\n  points: [],\n  depth: 1,\n};\n\nconst color = scaleLinear().domain([0, 8]).range(['#efe', '#060']);\n\nfunction nodes(quadtree) {\n  quadtree.depth = 0;\n\n  const nodes = [];\n  visit(quadtree, (node) => {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nfunction points(quadtree) {\n  return nodes(quadtree).flatMap((node) => node.points);\n}\n\nfunction visit(node, cb) {\n  cb(node);\n\n  if (node.topLeftChild) {\n    node.topLeftChild.depth = node.depth + 1;\n    visit(node.topLeftChild, cb);\n\n    node.topRightChild.depth = node.depth + 1;\n    visit(node.topRightChild, cb);\n\n    node.bottomLeftChild.depth = node.depth + 1;\n    visit(node.bottomLeftChild, cb);\n\n    node.bottomRightChild.depth = node.depth + 1;\n    visit(node.bottomRightChild, cb);\n  }\n}\n\nlet pts;\nlet rect;\n\nfunction draw() {\n  rect = svg.selectAll('.node').data(nodes(quadtree), (node) => node.boundary);\n  rect.exit().remove();\n  rect\n    .enter()\n    .append('rect')\n    .attr('class', 'node')\n    .attr('x', function (d) {\n      return d.boundary.x1;\n    })\n    .attr('y', function (d) {\n      return d.boundary.y1;\n    })\n    .attr('width', function (d) {\n      return d.boundary.x2 - d.boundary.x1;\n    })\n    .attr('height', function (d) {\n      return d.boundary.y2 - d.boundary.y1;\n    });\n\n  svg.selectAll('.node').style('fill', function (d) {\n    return color(d.depth);\n  });\n\n  pts = svg.selectAll('.point').data(points(quadtree), (p) => p.x);\n  pts.exit().remove();\n  pts\n    .enter()\n    .append('circle')\n    .attr('class', 'point')\n    .attr('cx', function (d) {\n      return d.x;\n    })\n    .attr('cy', function (d) {\n      return d.y;\n    })\n    .attr('r', 3)\n    .transition()\n    .duration(2000)\n    .styleTween('fill', function () {\n      return interpolate('red', '#999');\n    });\n  svg.selectAll('.point').raise();\n}\n\nrect = svg\n  .selectAll('.node')\n  .data(nodes(quadtree), (node) => node.boundary)\n  .enter()\n  .append('rect')\n  .attr('class', 'node')\n  .attr('x', function (d) {\n    return d.boundary.x1;\n  })\n  .attr('y', function (d) {\n    return d.boundary.y1;\n  })\n  .attr('width', function (d) {\n    return d.boundary.x2 - d.boundary.x1;\n  })\n  .attr('height', function (d) {\n    return d.boundary.y2 - d.boundary.y1;\n  });\n\npts = svg\n  .selectAll('.point')\n  .data(points(quadtree))\n  .enter()\n  .append('circle')\n  .attr('class', 'point')\n  .attr('cx', function (d) {\n    return d.x;\n  })\n  .attr('cy', function (d) {\n    return d.y;\n  })\n  .attr('r', 3);\n\nquadtree = {\n  boundary: {\n    x1: 0,\n    y1: 0,\n    x2: width,\n    y2: height,\n  },\n  points: [],\n  depth: 1,\n};\n\ndraw();\n\nconst restartButton = document.querySelector('button#restart');\nconst addPointButton = document.querySelector('button#add');\n\naddPointButton.addEventListener('click', () => {\n  insert(quadtree, { x: Math.random() * width, y: Math.random() * height });\n  draw();\n});\n\nrestartButton.addEventListener('click', () => {\n  quadtree = {\n    boundary: {\n      x1: 0,\n      y1: 0,\n      x2: width,\n      y2: height,\n    },\n    points: [],\n    depth: 1,\n  };\n  draw();\n});\n"],"names":["insert","$e2eeec8260cd6832$var$width","Math","min","window","innerWidth","document","querySelector","style","width","$e2eeec8260cd6832$var$svg","$cNEHL","select","append","attr","$e2eeec8260cd6832$var$quadtree","boundary","x1","y1","x2","y2","points","depth","$e2eeec8260cd6832$var$color","$d3250","scaleLinear","domain","range","$e2eeec8260cd6832$var$nodes","quadtree","nodes","$e2eeec8260cd6832$var$visit","node","push","$e2eeec8260cd6832$var$points","flatMap","cb","topLeftChild","topRightChild","bottomLeftChild","bottomRightChild","$e2eeec8260cd6832$var$pts","$e2eeec8260cd6832$var$rect","$e2eeec8260cd6832$var$draw","selectAll","data","exit","remove","enter","d","p","x","y","transition","duration","styleTween","$dMUm6","interpolate","raise","$e2eeec8260cd6832$var$restartButton","addEventListener","random"],"version":3,"file":"3.7699748c.js.map"}