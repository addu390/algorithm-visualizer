{"mappings":"qfAEA,MAAMA,EAAQC,KAAKC,IAAIC,OAAOC,WAAY,KAGpCC,EAAOC,EAAAC,MAFE,IAEQP,EAAkB,KAAKQ,KAAI,WAChD,MAAO,CAACP,KAAKQ,SAAWT,EAHX,IAGkBC,KAAKQ,aAGhCC,EAAMJ,EAAAK,OACF,QACPC,OAAO,OACPC,KAAK,QAASb,GACda,KAAK,SAVO,KAWZC,GAAG,SAAS,SAAUC,GACrB,MAAOC,EAAGC,GAAKX,EAAAY,QAAWH,EAAGT,EAAAa,UAAa,OAAOC,QACjDC,EAAIR,KAAK,KAAMG,GAAGH,KAAK,KAAMI,GAC7BK,OAGEC,EAAOvB,EAAQ,EAGfwB,EAAWd,EACdS,UAAU,SACVM,KAAK,CACJ,CAAEC,GAAI,EAAGC,GAAIJ,EAAMK,GAAI,EAAGC,GALjBC,KAMT,CAAEJ,GAAIH,EAAMI,GAAI3B,EAAO4B,GAAI,EAAGC,GANrBC,KAOT,CAAEJ,GAAI,EAAGC,GAAIJ,EAAMK,GAPVE,IAOoBD,GAzBlB,KA0BX,CAAEH,GAAIH,EAAMI,GAAI3B,EAAO4B,GARdE,IAQwBD,GA1BtB,OA4BZE,QACAnB,OAAO,QACPC,KAAK,QAAS,QACdA,KAAK,KAAK,SAAUmB,GACnB,OAAOA,EAAEN,MAEVb,KAAK,KAAK,SAAUmB,GACnB,OAAOA,EAAEJ,MAEVf,KAAK,SAAS,SAAUmB,GACvB,OAAOA,EAAEL,GAAKK,EAAEN,MAEjBb,KAAK,UAAU,SAAUmB,GACxB,OAAOA,EAAEH,GAAKG,EAAEJ,MAKpB,IAAIK,EAAOvB,EACRS,UAAU,SACVM,KAAK,CAAC,KACNM,QACAnB,OAAO,QACPC,KAAK,QAAS,QACdA,KAAK,QARE,KASPA,KAAK,SATE,KAWV,MAAMqB,EAASxB,EACZS,UAAU,UACVM,KAAKpB,GACL0B,QACAnB,OAAO,UACPC,KAAK,QAAS,SACdA,KAAK,MAAM,SAAUmB,GACpB,OAAOA,EAAE,MAEVnB,KAAK,MAAM,SAAUmB,GACpB,OAAOA,EAAE,MAEVnB,KAAK,IAAK,GAEb,IAAIQ,EAAMX,EACPE,OAAO,UACPC,KAAK,KAAM,MACXA,KAAK,IAAK,GACVA,KAAK,KAAMb,EAAQ,GACnBa,KAAK,KAAMiB,KACXK,MAAM,OAAQ,mBAiBRb,IACP,MAAMc,GAAQf,EAAIR,KAAK,MACjBwB,GAAQhB,EAAIR,KAAK,MAEvBoB,EAAKpB,KAAK,IAAKuB,EAAOE,IAAOzB,KAAK,IAAKwB,EAAOC,IAE9C,MAAMC,GAAMN,EAAKpB,KAAK,KAChB2B,GAAMP,EAAKpB,KAAK,KAChB4B,GAAMR,EAAKpB,KAAK,SAChB6B,GAAMT,EAAKpB,KAAK,UAEtBqB,EAAOS,MAAMC,IACX,MAAO5B,EAAGC,GAAK2B,EACfA,EAAEC,SAAW7B,GAAKuB,GAAMvB,GAAKuB,EAAKE,GAAMxB,GAAKuB,GAAMvB,GAAKuB,EAAKE,KAG/DR,EAAOY,QAAQ,YAAaF,GAAMA,EAAEC,WAEpC,MAAME,EAAO,GACbvB,EAASmB,MAAMK,QA5BGC,EAAIC,EAAAA,EA6BI,CAAExB,GAAIa,EAAIZ,GAAIY,EApEhC,IAoEwCX,GAAIY,EAAIX,GAAIW,EApEpD,MAuCUS,EA6BDD,GA3BZtB,IAAMwB,EAAGvB,IACZsB,EAAGtB,IAAMuB,EAAGxB,IACZuB,EAAGrB,IAAMsB,EAAGrB,IACZoB,EAAGpB,IAAMqB,EAAGtB,IAyBVmB,EAAKI,KAAKH,MAIdd,EAAOS,MAAMS,IACXA,EAAMC,SAAU,EAChBN,EAAKO,SAASC,cA1CAX,EAAGY,GACnB,MAAOxC,EAAGC,GAAK2B,GACRlB,GAACA,EAAEC,GAAEA,EAAEC,GAAEA,EAAEC,GAAEA,GAAO2B,EAC3B,OAAOxC,GAAKU,GAAMV,GAAKW,GAAMV,GAAKW,GAAMX,GAAKY,GAwCrC4B,CAASL,EAAOG,KAClBH,EAAMC,SAAU,SAKtBnB,EAAOY,QAAQ,WAAYF,GAClBA,EAAES,UAIb/B","sources":["quadtrees/demos/2.js"],"sourcesContent":["const d3 = require('d3');\n\nconst width = Math.min(window.innerWidth, 750);\nconst height = 300;\n\nconst data = d3.range((width * height) / 600).map(function () {\n  return [Math.random() * width, Math.random() * height];\n});\n\nconst svg = d3\n  .select('body')\n  .append('svg')\n  .attr('width', width)\n  .attr('height', height)\n  .on('click', function (e) {\n    const [x, y] = d3.pointer(e, d3.selectAll('svg').node());\n    ptr.attr('cx', x).attr('cy', y);\n    draw();\n  });\n\nconst midX = width / 2;\nconst midY = height / 2;\n\nconst sections = svg\n  .selectAll('.node')\n  .data([\n    { x1: 0, x2: midX, y1: 0, y2: midY },\n    { x1: midX, x2: width, y1: 0, y2: midY },\n    { x1: 0, x2: midX, y1: midY, y2: height },\n    { x1: midX, x2: width, y1: midY, y2: height },\n  ])\n  .enter()\n  .append('rect')\n  .attr('class', 'node')\n  .attr('x', function (d) {\n    return d.x1;\n  })\n  .attr('y', function (d) {\n    return d.y1;\n  })\n  .attr('width', function (d) {\n    return d.x2 - d.x1;\n  })\n  .attr('height', function (d) {\n    return d.y2 - d.y1;\n  });\n\nconst s = 100;\n\nlet rect = svg\n  .selectAll('.rect')\n  .data([{}])\n  .enter()\n  .append('rect')\n  .attr('class', 'rect')\n  .attr('width', s)\n  .attr('height', s);\n\nconst points = svg\n  .selectAll('.point')\n  .data(data)\n  .enter()\n  .append('circle')\n  .attr('class', 'point')\n  .attr('cx', function (d) {\n    return d[0];\n  })\n  .attr('cy', function (d) {\n    return d[1];\n  })\n  .attr('r', 3);\n\nlet ptr = svg\n  .append('circle')\n  .attr('id', 'pt')\n  .attr('r', 3)\n  .attr('cx', width / 2)\n  .attr('cy', height / 2)\n  .style('fill', 'yellow');\n\nfunction contains(p, b) {\n  const [x, y] = p;\n  const { x1, x2, y1, y2 } = b;\n  return x >= x1 && x <= x2 && y >= y1 && y <= y2;\n}\n\nfunction intersects(b1, b2) {\n  return (\n    b1.x1 <= b2.x2 && // not too right\n    b1.x2 >= b2.x1 && // not too left\n    b1.y1 <= b2.y2 && // not too down\n    b1.y2 >= b2.y1 // not too up\n  );\n}\n\nfunction draw() {\n  const ptrx = +ptr.attr('cx');\n  const ptry = +ptr.attr('cy');\n\n  rect.attr('x', ptrx - s / 2).attr('y', ptry - s / 2);\n\n  const rx = +rect.attr('x');\n  const ry = +rect.attr('y');\n  const rw = +rect.attr('width');\n  const rh = +rect.attr('height');\n\n  points.each((p) => {\n    const [x, y] = p;\n    p.selected = x >= rx && x <= rx + rw && y >= ry && y <= ry + rh;\n  });\n\n  points.classed('selected', (p) => p.selected);\n\n  const ints = [];\n  sections.each((section) => {\n    if (intersects(section, { x1: rx, x2: rx + s, y1: ry, y2: ry + s })) {\n      ints.push(section);\n    }\n  });\n\n  points.each((point) => {\n    point.scanned = false;\n    ints.forEach((int) => {\n      if (contains(point, int)) {\n        point.scanned = true;\n      }\n    });\n  });\n\n  points.classed('scanned', (p) => {\n    return p.scanned;\n  });\n}\n\ndraw();\n"],"names":["$48470b57349f7f23$var$width","Math","min","window","innerWidth","$48470b57349f7f23$var$data","$h36xl","range","map","random","$48470b57349f7f23$var$svg","select","append","attr","on","e","x","y","pointer","selectAll","node","$48470b57349f7f23$var$ptr","$48470b57349f7f23$var$draw","$48470b57349f7f23$var$midX","$48470b57349f7f23$var$sections","data","x1","x2","y1","y2","$48470b57349f7f23$var$height","enter","d","$48470b57349f7f23$var$rect","$48470b57349f7f23$var$points","style","ptrx","ptry","$48470b57349f7f23$var$s","rx","ry","rw","rh","each","p","selected","classed","ints","section","b1","b2","push","point","scanned","forEach","int","b","$48470b57349f7f23$var$contains"],"version":3,"file":"2.4294a77a.js.map"}