var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},o={},n={},e=t.parcelRequire40b1;null==e&&((e=function(t){if(t in o)return o[t].exports;if(t in n){var e=n[t];delete n[t];var i={id:t,exports:{}};return o[t]=i,e.call(i.exports,i,i.exports),i.exports}var d=new Error("Cannot find module '"+t+"'");throw d.code="MODULE_NOT_FOUND",d}).register=function(t,o){n[t]=o},t.parcelRequire40b1=e);var i,d=e("EQ8Ao");function r(t,o,n=4){return!!a(t.boundary,o)&&(t.points.length<n&&!t.topLeftChild?(t.points.push(o),!0):(t.topLeftChild||function(t,o){const{x1:n,x2:e,y1:i,y2:d}=t.boundary,a={x:(n+e)/2,y:(i+d)/2};t.topLeftChild=c({x1:n,y1:i,x2:a.x,y2:a.y}),t.bottomLeftChild=c({x1:n,y1:a.y,x2:a.x,y2:d}),t.topRightChild=c({x1:a.x,y1:i,x2:e,y2:a.y}),t.bottomRightChild=c({x1:a.x,y1:a.y,x2:e,y2:d}),t.points.forEach((n=>{r(t.topLeftChild,n,o)||r(t.bottomLeftChild,n,o)||r(t.topRightChild,n,o)||r(t.bottomRightChild,n,o)})),t.points=[]}(t,n),!!r(t.topLeftChild,o,n)||(!!r(t.bottomLeftChild,o,n)||(!!r(t.topRightChild,o,n)||!!r(t.bottomRightChild,o,n)))))}function a(t,o){return o.x>=t.x1&&o.x<=t.x2&&o.y>=t.y1&&o.y<=t.y2}function l(t,o){return Math.sqrt(Math.pow(t.x-o.x,2)+Math.pow(t.y-o.y,2))}function c(t){return{boundary:t,points:[]}}var h=(i={insert:r,search:function t(o,n){return e=o.boundary,i=n,e.x1<=i.x2&&e.x2>=i.x1&&e.y1<=i.y2&&e.y2>=i.y1?o.topLeftChild?t(o.topLeftChild,n).concat(t(o.bottomLeftChild,n)).concat(t(o.topRightChild,n)).concat(t(o.bottomRightChild,n)):o.points.filter((t=>a(n,t))):[];var e,i},nearest:function t(o,n,e={point:null,distance:Number.MAX_VALUE}){if(n.x<o.boundary.x1-e.distance||n.x>o.boundary.x2+e.distance||n.y<o.boundary.y1-e.distance||n.y>o.boundary.y2+e.distance)return e;if(!o.topLeftChild)return o.points.forEach((t=>{const o=l(t,n);o<e.distance&&(e.point=t,e.distance=o)})),e;const i=[o.topLeftChild,o.topRightChild,o.bottomLeftChild,o.bottomRightChild],d=n.y<(o.boundary.y1+o.boundary.y2)/2,r=n.x<(o.boundary.x1+o.boundary.x2)/2;return e=t(i[2*(1-d)+1*(1-r)],n,e),e=t(i[2*(1-d)+1*r],n,e),e=t(i[2*d+1*(1-r)],n,e),e=t(i[2*d+1*r],n,e)},contains:a,distance:l}).insert,p=i.distance;const y=d.range(500).map((()=>[750*Math.random(),300*Math.random()])),s={boundary:{topLeft:{x:0,y:0},bottomRight:{x:750,y:300}},points:[],depth:1};y.forEach((([t,o])=>{h(s,{x:t,y:o})}));const u=d.select("body").append("svg").attr("width",750).attr("height",300).on("click",(function(t){const[o,n]=d.pointer(t,d.selectAll("svg").node());u.selectAll("#pt").attr("cx",o).attr("cy",n),R()}));let f=u.selectAll(".node").data(L(s)).enter().append("rect").attr("class","node").attr("x",(function(t){return t.boundary.topLeft.x})).attr("y",(function(t){return t.boundary.topLeft.y})).attr("width",(function(t){return t.boundary.bottomRight.x-t.boundary.topLeft.x})).attr("height",(function(t){return t.boundary.bottomRight.y-t.boundary.topLeft.y})),b=u.selectAll(".point").data((x=s,L(x).flatMap((t=>t.points)))).enter().append("circle").attr("class","point").attr("cx",(function(t){return t.x})).attr("cy",(function(t){return t.y})).attr("r",3);var x;let C=u.append("circle").attr("id","pt").attr("r",3).attr("cx",375).attr("cy",150).style("fill","yellow");const g=d.scaleLinear().domain([0,8]).range(["#efe","#060"]);function L(t){t.depth=0;const o=[];return m(t,(t=>{o.push(t)})),o}function m(t,o){o(t),t.topLeftChild&&(t.topLeftChild.depth=t.depth+1,m(t.topLeftChild,o),t.topRightChild.depth=t.depth+1,m(t.topRightChild,o),t.bottomLeftChild.depth=t.depth+1,m(t.bottomLeftChild,o),t.bottomRightChild.depth=t.depth+1,m(t.bottomRightChild,o))}function R(){C=d.selectAll("#pt");const t=+C.attr("cx"),o=+C.attr("cy");b.each((t=>{t.scanned=t.selected=!1})),f.each((t=>{t.visited=!1}));v(s,{x:t,y:o}).point.selected=!0,b.classed("scanned",(t=>t.scanned)),b.classed("selected",(t=>t.selected)),f.style("fill",(t=>t.visited?g(t.depth):"none"))}function v(t,o,n={point:null,distance:p(t.boundary.topLeft,t.boundary.bottomRight)}){if(t.visited=!0,o.x<t.boundary.topLeft.x-n.distance||o.x>t.boundary.bottomRight.x+n.distance||o.y<t.boundary.topLeft.y-n.distance||o.y>t.boundary.bottomRight.y+n.distance)return n;if(!t.topLeftChild)return t.points.forEach((t=>{t.scanned=!0;const e=p(t,o);e<n.distance&&(n.point=t,n.distance=e)})),n;const e=[t.topLeftChild,t.topRightChild,t.bottomLeftChild,t.bottomRightChild],i=o.y<(t.boundary.topLeft.y+t.boundary.bottomRight.y)/2,d=o.x<(t.boundary.topLeft.x+t.boundary.bottomRight.x)/2;return n=v(e[2*(1-i)+1*(1-d)],o,n),n=v(e[2*(1-i)+1*d],o,n),n=v(e[2*i+1*(1-d)],o,n),n=v(e[2*i+1*d],o,n)}R();
//# sourceMappingURL=4.35b7f04b.js.map
